name: Create DynamoDB Table and Deploy

on:
  push:
    branches: [main]

jobs:
  create-table:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: create-table
        run: aws cloudformation create-stack --stack-name MyDynamoDBStack --template-body file://dynamodb-template.yaml --capabilities CAPABILITY_AUTO_EXPAND
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BETA_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BETA_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.BETA_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.BETA_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: Check for existing table
      #   run: |
      #     aws cloudformation describe-stacks --stack-name MyDynamoDBStack > /dev/null 2>&1
      #     if [[ $? -ne 0 ]]; then
      #       echo "Table stack does not exist, creating..."
      #       aws cloudformation create-stack --stack-name MyDynamoDBStack --template-body file://dynamodb-template.yaml --capabilities CAPABILITY_AUTO_EXPAND
      #     else
      #       echo "Table stack already exists, skipping creation."
      #     fi
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.BETA_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.BETA_ACCESS_KEY }}

  deploy-dev:
    needs: create-table  # Ensure test is successful before deployment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      # - run: pip install -r requirements.txt
      # - run : yes | sam delete --stack-name dev-stack --region us-east-1 --no-prompts
      - run: pip install aws-sam-cli
      - run: sam build
      # - run: sam deploy --no-confirm-changeset --stack-name dev-stack --region us-east-1  # Specify dev stack and region
      - run: sam deploy --no-confirm-changeset
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BETA_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BETA_ACCESS_KEY }}